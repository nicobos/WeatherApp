plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.android.extensions'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.nico.weatherapp"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "weather_api_url", "\"https://api.openweathermap.org/\""
            buildConfigField "String", "weather_api_key", "\"7b8dd00d3fb67c66a94995abf0e58603\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "WEATHER_API_URL", "\"https://api.openweathermap.org/\""
            buildConfigField "String", "weather_api_key", "\"7b8dd00d3fb67c66a94995abf0e58603\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

}

kapt {
    correctErrorTypes true
}

dependencies {

    implementation "androidx.core:core-ktx:${core_ktx}"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation "com.google.android.material:material:${material}"
    implementation "androidx.constraintlayout:constraintlayout:${contraint_layout}"
    implementation "androidx.navigation:navigation-fragment-ktx:${nav_version}"
    implementation "androidx.navigation:navigation-ui-ktx:${nav_version}"
    testImplementation 'junit:junit:4.13.2'



    androidTestImplementation 'androidx.annotation:annotation:1.3.0'
    testImplementation "org.robolectric:robolectric:4.7.3"
    androidTestImplementation('androidx.test:runner:1.4.0') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('androidx.test:rules:1.4.0') {
        exclude module: "support-annotations"
    }

    androidTestImplementation "androidx.test.ext:junit:${junit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espresso}"

    // Mockito
    testImplementation "org.mockito:mockito-core:${mockito}"
    testImplementation "org.mockito:mockito-inline:${mockito}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockito_util}"

    // Image loading
    implementation("io.coil-kt:coil:${coil}")

    // Kotlinx
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit}"

    // OkHttp Loggin
    implementation "com.squareup.okhttp3:logging-interceptor:${okhhtp}"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycle_viewmodel}"

    // Dependency injection
    implementation "com.google.dagger:hilt-android:${hilt_version}"
    kapt "com.google.dagger:hilt-android-compiler:${hilt_android_compiler}"

    // Google play services
    implementation "com.google.android.gms:play-services-location:${google_play}"

    /* Logging: Timber */
    implementation "com.jakewharton.timber:timber:${timber}"

    // Room db
    annotationProcessor "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-ktx:$room"
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
}